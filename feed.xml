<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://yufongg.github.io/</id><title>Yufong</title><subtitle>I post writeups on vulnerable machines from TryHackMe, Vulnhub and HackTheBox.</subtitle> <updated>2025-06-09T02:06:19+08:00</updated> <author> <name>yufongg</name> <uri>https://yufongg.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://yufongg.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://yufongg.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2025 yufongg </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Oops</title><link href="https://yufongg.github.io/posts/Oops/" rel="alternate" type="text/html" title="Oops" /><published>2025-05-31T00:00:00+08:00</published> <updated>2025-06-09T02:05:28+08:00</updated> <id>https://yufongg.github.io/posts/Oops/</id> <content src="https://yufongg.github.io/posts/Oops/" /> <author> <name>yufongg</name> </author> <category term="Web" /> <summary> Source Code Analysis app.py (Server) http://web-oops-app:5000/ @app.route('/', methods=['GET', 'POST']) def index(): message = None shortened_url = None if request.method == 'POST': original_url = request.form['original_url'] url = original_url.lower() while "script" in url: url = url.replace("script", "") # ... </summary> </entry> <entry><title>Beautiful Styles</title><link href="https://yufongg.github.io/posts/Beautiful-Styles/" rel="alternate" type="text/html" title="Beautiful Styles" /><published>2024-04-23T00:00:00+08:00</published> <updated>2025-06-09T00:06:05+08:00</updated> <id>https://yufongg.github.io/posts/Beautiful-Styles/</id> <content src="https://yufongg.github.io/posts/Beautiful-Styles/" /> <author> <name>yufongg</name> </author> <category term="GreyCTF 2024" /> <category term="Web" /> <summary> Challenge Description I opened a contest to see who could create the most beautiful CSS styles. Feel free to submit your CSS styles to me and I will add them to my website to judge them. I’ll even give you a sample of my site to get you started. Flag only consists of numbers and uppercase letters and the lowercase character f (the exception is the flag format of grey{.+}) Source Code Analysis... </summary> </entry> <entry><title>Markdown Parser</title><link href="https://yufongg.github.io/posts/Markdown-Parser/" rel="alternate" type="text/html" title="Markdown Parser" /><published>2024-04-21T00:00:00+08:00</published> <updated>2025-06-09T00:17:10+08:00</updated> <id>https://yufongg.github.io/posts/Markdown-Parser/</id> <content src="https://yufongg.github.io/posts/Markdown-Parser/" /> <author> <name>yufongg</name> </author> <category term="Web" /> <summary> Source Code Analysis markdown.js function parseMarkdown(markdownText) { const lines = markdownText.split('\n'); let htmlOutput = ""; let inCodeBlock = false; lines.forEach(line =&amp;gt; { if (inCodeBlock) { if (line.startsWith('```')) { inCodeBlock = false; htmlOutput += '&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;'; ... </summary> </entry> <entry><title>Grey CTF Survey</title><link href="https://yufongg.github.io/posts/Grey-CTF-Survey/" rel="alternate" type="text/html" title="Grey CTF Survey" /><published>2024-04-20T00:00:00+08:00</published> <updated>2025-06-09T00:17:10+08:00</updated> <id>https://yufongg.github.io/posts/Grey-CTF-Survey/</id> <content src="https://yufongg.github.io/posts/Grey-CTF-Survey/" /> <author> <name>yufongg</name> </author> <category term="GreyCTF 2024" /> <category term="Web" /> <summary> Source Code Analysis app.post('/vote', async (req, res) =&amp;gt; { const {vote} = req.body; if(typeof vote != 'number') { return res.status(400).json({ "error": true, "msg":"Vote must be a number" }); } if(vote &amp;lt; 1 &amp;amp;&amp;amp; vote &amp;gt; -1) { score += parseInt(vote); if(score &amp;gt; 1) { score = -0.42069; ... </summary> </entry> <entry><title>Fearless Concurrency</title><link href="https://yufongg.github.io/posts/Fearless-Concurrency/" rel="alternate" type="text/html" title="Fearless Concurrency" /><published>2024-04-20T00:00:00+08:00</published> <updated>2025-06-09T00:17:10+08:00</updated> <id>https://yufongg.github.io/posts/Fearless-Concurrency/</id> <content src="https://yufongg.github.io/posts/Fearless-Concurrency/" /> <author> <name>yufongg</name> </author> <category term="GreyCTF 2024" /> <category term="Web" /> <summary> Source Code Analysis async fn query(State(state): State&amp;lt;AppState&amp;gt;, Json(body): Json&amp;lt;Query&amp;gt;) -&amp;gt; axum::response::Result&amp;lt;String&amp;gt; { let users = state.users.read().await; let user = users.get(&amp;amp;body.user_id).ok_or_else(|| "User not found! Register first!")?; let user = user.clone(); // Prevent registrations from being blocked while query is running // Fe... </summary> </entry> </feed>
